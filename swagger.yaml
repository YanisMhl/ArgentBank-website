swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transactions:
    get:
      tags:
        - Transaction Module
      summary: User's transactions API
      description: API for retrieving transactions of an user for the current month, grouped by accounts
      security:
        - Bearer: []
      responses:
        '200':
          description: Transactions retrieved successfully
          schema: 
            type: object
            properties:
              accounts:
                type: array
                items:
                  $ref: '#/definitions/Account'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transactions/{transactionId}:
    get:
      tags:
        - Transaction Module
      summary: Transaction details API
      description: API to visualize details of a transaction
      security:
      - Bearer: []
      parameters:
        - name: "transactionId"
          in: "path"
          required: true
          type: "string"
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            $ref: '#/definitions/TransactionDetail'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
    patch:
      tags:
        - Transaction Module
      summary: Transaction details API
      description: API to alter transaction details
      security:
      - Bearer: []
      parameters:
        - name: "transactionId"
          in: "path"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          required: true
          schema: 
            type: "object"
            properties:
              transactionType:
                type: "string"
              category:
                type: "string"
              note:
                type: "string"
      responses:
        '200':
          description: Transaction altered successfully
          schema:
            $ref: '#/definitions/TransactionDetail'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error



        
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Account:
    type: object
    properties:
      accountId:
        type: string
      accountName:
        type: string
      balance: 
        type: number
        format: float
      transactions:
        type: array
        items:
          $ref: '#/definitions/Transaction'
  Transaction:
    type: object
    properties: 
      transactionId:
        type: string
      date:
        type: string
      description:
        type: string
      amount:
        type: number
        format: float
  TransactionDetail: 
    allOf:
      - $ref: '#/definitions/Transaction'
      - type: object
    properties: 
      transactionType:
        type: string
      category: 
        type: string
      note: 
        type: string
        
